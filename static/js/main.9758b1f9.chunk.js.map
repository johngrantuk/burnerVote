{"version":3,"sources":["utils/GraphHelper.js","utils/VoteHelper.js","components/ProposalQR.js","components/Proposals.js","components/NavBar.js","components/SideBar.js","App.tsx","utils/getWeb3.js","components/NewVote.js","serviceWorker.js","index.js"],"names":["getProposals","_getProposals","apply","this","arguments","_callee","result","regenerator_default","a","wrap","_context","prev","next","console","log","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","query","then","r","json","data","catch","error","sent","abrupt","newProposalIssueds","stop","GetProposalData","_x","_GetProposalData","_callee2","ProposalName","_context2","GetVoteInfo","_GetVoteInfo","proposalData","anonymousDeposits","noDeposits","voters","totalValue","i","yesValue","noValue","newYesValue","newNoValue","length","Choice","parseFloat","ContriValue","undefined","SenderAddr","yesTotalValue","noTotalValue","GetQuadraticTotals","_x2","_GetQuadraticTotals","yes","no","noUniqueAdresses","key","voter","t0","keys","t1","done","value","hasOwnProperty","Math","sqrt","yesCount","noCount","QRCode","require","Proposal","state","deposits","uniqueAddresses","graphLoaded","componentDidMount","_this","processVotes","props","proposal","name","voteInfo","proposalQuadraticInfo","setState","chart","react_default","createElement","dist_default","animate","animationDuration","animationEasing","cx","cy","color","title","label","labelPosition","labelStyle","fill","fontFamily","fontSize","lengthAngle","lineWidth","onClick","onMouseOut","onMouseOver","paddingAngle","radius","ratio","rounded","startAngle","style","height","quickStyle","textAlign","Row","Col","className","backgroundColor","optionAaddr","paddingTop","optionBaddr","Component","Proposals","proposals","map","ProposalQR","id","NavBar","href","type","data-toggle","aria-controls","aria-expanded","aria-label","Deposit","App","alert","SideBar","components_NavBar","components_Proposals","loadWeb3","resolve","reject","web3","_web","provider","_web2","window","ethereum","Web3","enable","providers","HttpProvider","getWeb3","Promise","document","readyState","addEventListener","Object","asyncToGenerator","mark","NewVote","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","accounts","contract","instance","eth","getAccounts","Contract","abi","makeNewVote","bind","assertThisInitialized","updateQuestion","updateDeadline","question","deadline","methods","newVoteProposal","Date","now","send","from","event","target","placeholder","onChange","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","Boolean","location","hostname","match","ReactDOM","render","react_router_dom","basename","react_router","exact","path","component","_ref","params","address","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9758b1f9.chunk.js","sourcesContent":["// Code to retrieve info from The Graph. Should make easier to change to TypeScript.\n// Exisiting subgraph at: https://thegraph.com/explorer/subgraph/madhur4444/imgovdynamic\n// https://api.thegraph.com/subgraphs/name/madhur4444/imgovdynamic\n// Useful docs: https://thegraph.com/docs/graphql-api\n\n\nexport async function getProposals() {\n  // Gets all issued proposals\n  // Currently name_not_contains: \"fae\" to avoid old proposals with unrealistic votes.\n  console.log('TheGraph - getProposals()');\n  const query = `{\n    newProposalIssueds(where: { name_not_contains: \"fae\" }) {\n      id\n      issuer\n      deadline\n      name\n      data\n      optionBaddr\n      optionAaddr\n    }\n  }`;\n\n  const result = await fetch('https://api.thegraph.com/subgraphs/name/madhur4444/imgovdynamic', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n    body: JSON.stringify({\n      query\n    })\n  }).then(r => r.json()).then(data => data).catch(error => console.log(error))\n  console.log('TheGraph - got Proposals.');\n  return result.data.newProposalIssueds;\n};\n\nexport async function GetProposalData(ProposalName){\n  // Get information for specific Proposal identified by name.\n  console.log('GetProposalData(): ' + ProposalName)\n\n  // Gets all deposits for this proposal\n  const query = `{ anonymousDeposits (where: {PropName: \"` + ProposalName + `\"}) {\n      id\n      SenderAddr\n      ContriValue\n      PropName\n      Choice\n    }\n  }`;\n\n  const result = await fetch('https://api.thegraph.com/subgraphs/name/madhur4444/imgovdynamic', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n    body: JSON.stringify({\n      query\n    })\n  }).then(r => r.json()).then(data => data).catch(error => console.log(error))\n\n  return result;\n}\n","// Code to process vote info. Should be easy to replace.\n// This is where BrightID check will be added.\n\nexport async function GetVoteInfo(proposalData){\n  var anonymousDeposits = proposalData.data.anonymousDeposits;\n  var noDeposits = anonymousDeposits.length;\n  var voters = {};\n  var totalValue = 0;\n\n  // Check all the deposits for proposal\n  for(var i = 0;i < noDeposits;i++){\n\n    var yesValue = 0, noValue = 0;\n\n    // Add BrightID check. Don't count vote if not.??\n\n    if(anonymousDeposits[i].Choice === 'yes'){\n      yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n    } else {\n      noValue = parseFloat(anonymousDeposits[i].ContriValue);\n    }\n\n    // Check if address has already been counted & initialise if not\n    if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n    }else{\n      var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n      var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n      voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n    }\n\n    totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n  }\n\n  return { voters: voters, totalValue: totalValue}\n}\n\nexport async function GetQuadraticTotals(voters){\n  // Quadratic method.\n  // Calculate quadratic total for each voter\n  var yes = 0;\n  var no = 0;\n  var noUniqueAdresses = 0;\n  var totalValue = 0;\n  for(var key in voters){\n    // skip loop if the property is from prototype\n    if (!voters.hasOwnProperty(key)) continue;\n\n    var voter = voters[key];\n    yes += Math.sqrt(voter.yesTotalValue);\n    no += Math.sqrt(voter.noTotalValue);\n    noUniqueAdresses += 1;\n    totalValue = totalValue + voter.yesTotalValue + voter.noTotalValue;\n  }\n  return {\n    yesCount: yes,\n    noCount: no,\n    noUniqueAdresses: noUniqueAdresses,\n    totalValue: totalValue\n  };\n}\n","import React, { Component } from 'react';\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\nimport { Row, Col } from \"reactstrap\";\nimport { GetProposalData } from \"../utils/GraphHelper\";\nimport { GetVoteInfo, GetQuadraticTotals } from \"../utils/VoteHelper\";\nvar QRCode = require('qrcode.react');\n\nclass Proposal extends Component {\n\n  state = { deposits: [], uniqueAddresses: [], graphLoaded: false };\n\n\n  componentDidMount = async () => {\n      await this.processVotes();\n  };\n\n  async processVotes(){\n    // Retrieve porposal deposit data from Graph.\n    var proposalData = await GetProposalData(this.props.proposal.name);\n\n    if(!proposalData.data){\n      console.log('MMMhhhh this is weird...')\n      return;\n    }\n    // Process all the deposit info for this proposal - BrightID check.\n    var voteInfo = await GetVoteInfo(proposalData);\n\n    // Calculate voting info.\n    var proposalQuadraticInfo = await GetQuadraticTotals(voteInfo.voters);\n    \n    this.setState({\n      graphLoaded: true,\n      yesCount: proposalQuadraticInfo.yesCount,\n      noCount: proposalQuadraticInfo.noCount,\n      noUniqueAdresses: proposalQuadraticInfo.noUniqueAdresses,\n      totalValue: proposalQuadraticInfo.totalValue\n    });\n  }\n\n  render() {\n\n    let chart;\n    if(this.state.graphLoaded){\n      chart =  <ReactMinimalPieChart\n                    animate={false}\n                    animationDuration={500}\n                    animationEasing=\"ease-out\"\n                    cx={50}\n                    cy={50}\n                    data={[\n                      {\n                        color: '#E38627',\n                        title: 'Yes',\n                        value: this.state.yesCount\n                      },\n                      {\n                        color: '#C13C37',\n                        title: 'Two',\n                        value: this.state.noCount\n                      }\n                    ]}\n                    label\n                    labelPosition={50}\n                    labelStyle={{\n                      fill: '#121212',\n                      fontFamily: 'sans-serif',\n                      fontSize: '5px'\n                    }}\n                    lengthAngle={360}\n                    lineWidth={100}\n                    onClick={undefined}\n                    onMouseOut={undefined}\n                    onMouseOver={undefined}\n                    paddingAngle={0}\n                    radius={50}\n                    ratio={1}\n                    rounded={false}\n                    startAngle={0}\n                    style={{\n                      height: '300px'\n                    }}\n                  />\n\n    }\n\n    var noUniqueAdresses = this.state.noUniqueAdresses;\n\n    var quickStyle = {\n      textAlign: 'center'\n    };\n\n    return(\n      <div>\n\n        <Row>\n          <Col className=\"col-sm\">\n            <h3 style={quickStyle}>Yes</h3>\n            <p>Yes Votes: {this.state.yesCount}</p>\n            <p>To vote YES to this proposal send any amount of ETH to:</p>\n            <div>\n              <div style={{textAlign: 'center', backgroundColor: 'white'}}>\n                <QRCode value={this.props.proposal.optionAaddr} style={{paddingTop: '10px'}}/>\n              </div>\n            </div>\n            <p>{this.props.proposal.optionAaddr}</p>\n          </Col>\n          <Col className=\"col-sm\">\n            <h2 style={quickStyle}>{this.props.proposal.name}</h2>\n            <p>Total Value Burned (wei): {this.state.totalValue}</p>\n            <p>Unique Voters: {noUniqueAdresses}</p>\n            { chart }\n          </Col>\n          <Col className=\"col-sm\">\n            <h3 style={quickStyle}>No</h3>\n            <p>No Votes: {this.state.noCount}</p>\n            <p>To vote NO to this proposal send any amount of ETH to:</p>\n            <div>\n              <div style={{textAlign: 'center', backgroundColor: 'white'}}>\n                <QRCode value={this.props.proposal.optionBaddr} style={{paddingTop: '10px'}}/>\n              </div>\n            </div>\n            <p>{this.props.proposal.optionBaddr}</p>\n          </Col>\n        </Row>\n        <hr/>\n      </div>\n    )\n\n  }\n}\n\nexport default Proposal\n","import React, { Component } from 'react';\nimport Proposal from './ProposalQR.js';\n\nclass Proposals extends Component {\n\n  render() {\n\n    const proposals = this.props.proposals.map(proposal => {\n      return <Proposal key={proposal.id} proposal={proposal}/>\n    })\n\n    return (\n      <div>\n        <h2>Proposals</h2>\n        {proposals}\n\n      </div>\n    )\n  }\n}\n\nexport default Proposals\n","import React, { Component } from 'react';\n\nclass NavBar extends Component {\n\n  render() {\n    return(\n      <nav className=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top \">\n        <div className=\"container-fluid\">\n          <div className=\"navbar-wrapper\">\n\n            <a className=\"navbar-brand\" href={'/'}>Burn Signal</a>\n          </div>\n\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"sr-only\">Toggle navigation</span>\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse justify-content-end\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href={'/'}>\n                  <i className=\"tim-icons icon-bell-55\"></i>  Notifications\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n\n  }\n}\n\nexport default NavBar\n","import React, { Component } from 'react';\n\nclass Deposit extends Component {\n\n  /*\n  anonymousDeposits(first: 5) {\n    id\n    SenderAddr\n    ContriValue\n    PropName\n    Choice\n  }\n  */\n  render() {\n    return(\n      <div className=\"sidebar\">\n\n        <div className=\"sidebar-wrapper\">\n\n          <ul className=\"nav\">\n            <li className=\"active \">\n              <a href={'/'}>\n                <i className=\"tim-icons icon-chart-pie-36\"></i>\n                <p>Dashboard</p>\n              </a>\n            </li>\n            <li>\n              <a href={'/#/newVote'}>\n                <i className=\"tim-icons icon-bulb-63\"></i>\n                <p>New Proposal</p>\n              </a>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default Deposit\n","import React, { Component } from \"react\";\nimport Proposals from './components/Proposals';\nimport Deposits from './components/Deposits';\nimport NavBar from './components/NavBar';\nimport SideBar from './components/SideBar';\nimport \"./black-dashboard/assets/css/black-dashboard-react.css\";\nimport \"./black-dashboard/assets/css/nucleo-icons.css\";\nimport { getProposals } from \"./utils/GraphHelper\";\n\n\nclass App extends Component {\n\n  state = { proposals: [], deposits: [] };\n\n  componentDidMount = async () => {\n    try {\n      // Loads all proposals using the subgraph\n      var proposals = await getProposals();\n      this.setState({ proposals: proposals });\n    } catch (error) {\n      alert(\n        'Error loading The Graph',\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <SideBar></SideBar>\n\n        <div className=\"main-panel\">\n          <NavBar></NavBar>\n\n          <div className=\"content\">\n            <div className=\"container-fluid\">\n\n              <Proposals proposals={this.state.proposals} />\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n\n    // This is to get round routing issue\n    if(document.readyState === \"complete\"){\n      loadWeb3(resolve, reject);\n      console.log('Web3 Loaded Ok');\n    }\n\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      loadWeb3(resolve, reject);\n      console.log('Web3 Loaded.');\n    });\n  });\n\nasync function loadWeb3(resolve, reject){\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n    try {\n      // Request account access if needed\n      await window.ethereum.enable();\n      // Acccounts now exposed\n      resolve(web3);\n    } catch (error) {\n      reject(error);\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    resolve(web3);\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\n      \"http://127.0.0.1:8545\"\n    );\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n}\n\nexport default getWeb3;\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport SideBar from './SideBar';\nimport getWeb3 from \"../utils/getWeb3\";\n\nclass NewVote extends Component {\n  // Allows user to create a new Proposal/Question/Vote/Whatever it's agreed to be called.\n  // Uses hardcoded contract address.\n  // Deadline not currently functioning.\n  state = { web3: null, accounts: null, contract: null };\n\n  constructor(props) {\n    super(props);\n\n    this.makeNewVote = this.makeNewVote.bind(this);\n    this.updateQuestion = this.updateQuestion.bind(this);\n    this.updateDeadline = this.updateDeadline.bind(this);\n  }\n\n  componentDidMount = async () => {\n    try {\n      console.log('Loading web3...');\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\n      let address = '0x6936b81d7629378aabddcf882b2a7fdfff1cd962';  // Taken from old repo, assume this is the Ropstein deployed\n\n      const instance = new web3.eth.Contract(abi, address);\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance });\n\n    } catch (error) {\n      alert(\n        'Error loading The Graph',\n      );\n      console.error(error);\n    }\n  };\n\n  async makeNewVote(){\n    console.log('New Vote');\n    console.log(this.state.question);\n    console.log(this.state.deadline);\n    console.log('Sending transaction...');\n    await this.state.contract.methods.newVoteProposal(this.state.question,'Here is some data', (Date.now() + 3600*1000)).send({ from: this.state.accounts[0] });\n    console.log('Done?')\n  }\n\n  updateQuestion(event) {\n    this.setState({question: event.target.value});\n  }\n\n  updateDeadline(event) {\n    this.setState({deadline: event.target.value});\n  }\n\n  render() {\n    return(\n\n      <div className=\"App\">\n\n        <SideBar></SideBar>\n\n        <div className=\"main-panel\">\n          <NavBar></NavBar>\n\n            <div className=\"content\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h5 className=\"title\">Ask a question...</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      <form>\n\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Your Question</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Ask Away\" onChange={this.updateQuestion}/>\n                            </div>\n                          </div>\n\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Deadline</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Block No\"  onChange={this.updateDeadline}/>\n                            </div>\n                          </div>\n                        </div>\n\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <button type=\"submit\" className=\"btn btn-fill btn-primary\" onClick={this.makeNewVote}>Post</button>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n        </div>\n      </div>\n\n    )\n\n  }\n}\n\nexport default NewVote;\n\nvar abi = [\n  {\n   \"constant\": false,\n   \"inputs\": [\n    {\n     \"name\": \"_name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_data\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_deadline\",\n     \"type\": \"uint64\"\n    }\n   ],\n   \"name\": \"newVoteProposal\",\n   \"outputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"function\"\n  },\n  {\n   \"inputs\": [],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"constructor\"\n  },\n  {\n   \"anonymous\": false,\n   \"inputs\": [\n    {\n     \"indexed\": false,\n     \"name\": \"proposalID\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"name\": \"newProposalIssued\",\n   \"type\": \"event\"\n  },\n  {\n   \"constant\": true,\n   \"inputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"name\": \"proposals\",\n   \"outputs\": [\n    {\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"view\",\n   \"type\": \"function\"\n  }\n ]\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport NewVote from './components/NewVote';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter, Route } from 'react-router-dom'\n\n\nconst Profile = ({match}) => (\n  <div>\n    <h2>Profile For Address: {match.params.address}</h2>\n  </div>\n)\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <HashRouter basename='/'>\n      <div>\n        <main>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/home\" component={App} />\n          <Route path=\"/newVote\" component={NewVote} />\n          <Route exact path=\"/profile/:address\" component={Profile} />\n        </main>\n      </div>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}