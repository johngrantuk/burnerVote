{"version":3,"sources":["components/ProposalQR.js","components/Proposals.js","components/Deposit.js","components/NavBar.js","components/Deposits.js","components/SideBar.js","App.js","utils/getWeb3.js","components/NewVote.js","serviceWorker.js","index.js"],"names":["QRCode","require","Proposal","state","deposits","uniqueAddresses","graphLoaded","componentDidMount","_callee","regenerator_default","a","wrap","_context","prev","next","_this","processVotes","stop","this","ProposalName","console","log","query","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","then","r","json","data","catch","error","result","proposalData","anonymousDeposits","yes","no","noDeposits","length","unique","values","totalValue","i","indexOf","SenderAddr","push","parseFloat","ContriValue","Choice","props","proposal","name","setState","yesCount","noCount","voters","yesValue","noValue","undefined","yesTotalValue","noTotalValue","newYesValue","newNoValue","noUniqueAdresses","key","hasOwnProperty","voter","Math","sqrt","GetProposalGraphData","GetAddressVotes","GetQuadraticTotals","chart","react_default","createElement","dist_default","animate","animationDuration","animationEasing","cx","cy","color","title","value","label","labelPosition","labelStyle","fill","fontFamily","fontSize","lengthAngle","lineWidth","onClick","onMouseOut","onMouseOver","paddingAngle","radius","ratio","rounded","startAngle","style","height","quickStyle","textAlign","Row","Col","className","backgroundColor","optionAaddr","paddingTop","optionBaddr","Component","Proposals","proposals","map","ProposalQR","id","Deposit","deposit","PropName","NavBar","href","type","data-toggle","aria-controls","aria-expanded","aria-label","App","storageValue","web3","accounts","contract","graph","t0","alert","newProposalIssueds","SideBar","components_NavBar","components_Proposals","loadWeb3","_callee2","resolve","reject","_web","provider","_web2","_context2","window","ethereum","Web3","enable","providers","HttpProvider","getWeb3","Promise","document","readyState","addEventListener","Object","asyncToGenerator","mark","NewVote","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","instance","sent","eth","getAccounts","Contract","abi","makeNewVote","bind","assertThisInitialized","updateQuestion","updateDeadline","question","deadline","methods","newVoteProposal","Date","now","send","from","event","target","placeholder","onChange","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","Boolean","location","hostname","match","ReactDOM","render","react_router_dom","basename","react_router","exact","path","component","_ref","params","address","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8dc3edb0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\nimport { Row, Col } from \"reactstrap\";\nvar QRCode = require('qrcode.react');\n\nclass Proposal extends Component {\n\n  state = { deposits: [], uniqueAddresses: [], graphLoaded: false };\n\n\n  componentDidMount = async () => {\n      await this.processVotes();\n  };\n\n  async GetProposalGraphData(ProposalName){\n    console.log('GetProposalGraphData(): ' + ProposalName)\n    // https://thegraph.com/docs/graphql-api\n    // Gets all deposits for this proposal\n    const query = `{ anonymousDeposits (where: {PropName: \"` + ProposalName + `\"}) {\n        id\n        SenderAddr\n        ContriValue\n        PropName\n        Choice\n      }\n    }`;\n\n    const result = await fetch('https://api.thegraph.com/subgraphs/name/madhur4444/imgovdynamic', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify({\n        query\n      })\n    }).then(r => r.json()).then(data => data).catch(error => console.log(error))\n\n    return result;\n  }\n\n  async CalculateVotesBasic(proposalData){\n    var anonymousDeposits = proposalData.data.anonymousDeposits;\n\n    var yes = 0;\n    var no = 0;\n    var noDeposits = anonymousDeposits.length;\n    var unique = [];\n    var values = {};\n    var totalValue = 0;\n\n    for(var i = 0;i < noDeposits;i++){\n\n      if(unique.indexOf(anonymousDeposits[i].SenderAddr) === -1){\n        unique.push(anonymousDeposits[i].SenderAddr);\n        values[anonymousDeposits[i].SenderAddr] = parseFloat(anonymousDeposits[i].ContriValue);\n      }else{\n        values[anonymousDeposits[i].SenderAddr] += parseFloat(anonymousDeposits[i].ContriValue);\n      }\n\n      if(anonymousDeposits[i].Choice === 'yes'){\n        yes++;\n      } else {\n        no++;\n      }\n\n      totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n    }\n    console.log(this.props.proposal.name)\n    console.log('Total: ' + noDeposits);\n    console.log('Yes: ' + yes);\n    console.log('No: ' + no);\n    console.log('No Unique Addresses: ' + unique.length)\n    console.log(unique)\n    console.log('Total Value: ' + totalValue)\n    console.log(values)\n\n    this.setState({\n      graphLoaded: true,\n      deposits: anonymousDeposits,\n      yesCount: yes,\n      noCount: no,\n      uniqueAddresses: unique\n    });\n  }\n\n  async GetAddressVotes(proposalData){\n    var anonymousDeposits = proposalData.data.anonymousDeposits;\n    var noDeposits = anonymousDeposits.length;\n    var voters = {};\n    var totalValue = 0;\n\n    // Check all the deposits for proposal\n    for(var i = 0;i < noDeposits;i++){\n\n      var yesValue = 0, noValue = 0;\n\n      if(anonymousDeposits[i].Choice === 'yes'){\n        yesValue = parseFloat(anonymousDeposits[i].ContriValue);\n      } else {\n        noValue = parseFloat(anonymousDeposits[i].ContriValue);\n      }\n\n      // Check if address has already been counted & initialise if not\n      if(voters[anonymousDeposits[i].SenderAddr] === undefined){\n        voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: yesValue, noTotalValue: noValue };\n      }else{\n        var newYesValue = voters[anonymousDeposits[i].SenderAddr].yesTotalValue + yesValue;\n        var newNoValue = voters[anonymousDeposits[i].SenderAddr].noTotalValue + noValue;\n        voters[anonymousDeposits[i].SenderAddr] = { yesTotalValue: newYesValue, noTotalValue: newNoValue };\n      }\n\n      totalValue += parseFloat(anonymousDeposits[i].ContriValue);\n    }\n    console.log(this.props.proposal.name)\n    console.log('No Deposits: ' + noDeposits);\n    console.log('Total Value: ' + totalValue)\n    console.log('Voters:')\n    console.log(voters)\n\n    this.setState({\n      totalValue: totalValue,\n      voters: voters\n    });\n\n    return voters;\n  }\n\n  async GetQuadraticTotals(voters){\n\n    var yes = 0;\n    var no = 0;\n    var noUniqueAdresses = 0;\n    var totalValue = 0;\n    for(var key in voters){\n      // skip loop if the property is from prototype\n      if (!voters.hasOwnProperty(key)) continue;\n\n      var voter = voters[key];\n      yes += Math.sqrt(voter.yesTotalValue);\n      no += Math.sqrt(voter.noTotalValue);\n      noUniqueAdresses += 1;\n      totalValue = totalValue + voter.yesTotalValue + voter.noTotalValue;\n    }\n\n    this.setState({\n      graphLoaded: true,\n      yesCount: yes,\n      noCount: no,\n      noUniqueAdresses: noUniqueAdresses,\n      totalValue: totalValue\n    });\n  }\n\n  async processVotes(){\n\n    var proposalData = await this.GetProposalGraphData(this.props.proposal.name);\n\n    if(!proposalData.data){\n      console.log('MMMhhhh this is weird...')\n      return;\n    }\n\n    var voters = await this.GetAddressVotes(proposalData);\n\n    await this.GetQuadraticTotals(voters);\n\n    console.log('graph() OUT')\n  }\n\n  render() {\n\n    let chart;\n    if(this.state.graphLoaded){\n      chart =  <ReactMinimalPieChart\n                    animate={false}\n                    animationDuration={500}\n                    animationEasing=\"ease-out\"\n                    cx={50}\n                    cy={50}\n                    data={[\n                      {\n                        color: '#E38627',\n                        title: 'Yes',\n                        value: this.state.yesCount\n                      },\n                      {\n                        color: '#C13C37',\n                        title: 'Two',\n                        value: this.state.noCount\n                      }\n                    ]}\n                    label\n                    labelPosition={50}\n                    labelStyle={{\n                      fill: '#121212',\n                      fontFamily: 'sans-serif',\n                      fontSize: '5px'\n                    }}\n                    lengthAngle={360}\n                    lineWidth={100}\n                    onClick={undefined}\n                    onMouseOut={undefined}\n                    onMouseOver={undefined}\n                    paddingAngle={0}\n                    radius={50}\n                    ratio={1}\n                    rounded={false}\n                    startAngle={0}\n                    style={{\n                      height: '300px'\n                    }}\n                  />\n\n    }\n\n    var noUniqueAdresses = this.state.noUniqueAdresses;\n\n    var quickStyle = {\n      textAlign: 'center'\n    };\n\n    return(\n      <div>\n\n        <Row>\n          <Col className=\"col-sm\">\n            <h3 style={quickStyle}>Yes</h3>\n            <p>Yes Votes: {this.state.yesCount}</p>\n            <p>To vote YES to this proposal send any amount of ETH to:</p>\n            <div>\n              <div style={{textAlign: 'center', backgroundColor: 'white'}}>\n                <QRCode value={this.props.proposal.optionAaddr} style={{paddingTop: '10px'}}/>\n              </div>\n            </div>\n            <p>{this.props.proposal.optionAaddr}</p>\n          </Col>\n          <Col className=\"col-sm\">\n            <h2 style={quickStyle}>{this.props.proposal.name}</h2>\n            <p>Total Value Burned (wei): {this.state.totalValue}</p>\n            <p>Unique Voters: {noUniqueAdresses}</p>\n            { chart }\n          </Col>\n          <Col className=\"col-sm\">\n            <h3 style={quickStyle}>No</h3>\n            <p>No Votes: {this.state.noCount}</p>\n            <p>To vote NO to this proposal send any amount of ETH to:</p>\n            <div>\n              <div style={{textAlign: 'center', backgroundColor: 'white'}}>\n                <QRCode value={this.props.proposal.optionBaddr} style={{paddingTop: '10px'}}/>\n              </div>\n            </div>\n            <p>{this.props.proposal.optionBaddr}</p>\n          </Col>\n        </Row>\n        <hr/>\n      </div>\n    )\n\n  }\n}\n\nexport default Proposal\n","import React, { Component } from 'react';\nimport Proposal from './ProposalQR';\n\nclass Proposals extends Component {\n\n  render() {\n\n    const proposals = this.props.proposals.map(proposal => {\n      return <Proposal key={proposal.id} proposal={proposal}/>\n    })\n\n    return (\n      <div>\n        <h2>Proposals</h2>\n        {proposals}\n\n      </div>\n    )\n  }\n}\n\nexport default Proposals\n","import React, { Component } from 'react';\n\nclass Deposit extends Component {\n\n  /*\n  anonymousDeposits(first: 5) {\n    id\n    SenderAddr\n    ContriValue\n    PropName\n    Choice\n  }\n  */\n  render() {\n    return(\n      <div>\n        <p>ID: {this.props.deposit.id}</p>\n        <p>SenderAddr: {this.props.deposit.SenderAddr}</p>\n        <p>ContriValue: {this.props.deposit.ContriValue}</p>\n          <p>PropName: {this.props.deposit.PropName}</p>\n        <p>Choice: {this.props.deposit.Choice}</p>\n        <hr/>\n      </div>\n    )\n\n  }\n}\n\nexport default Deposit\n","import React, { Component } from 'react';\n\nclass NavBar extends Component {\n\n  render() {\n    return(\n      <nav className=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top \">\n        <div className=\"container-fluid\">\n          <div className=\"navbar-wrapper\">\n\n            <a className=\"navbar-brand\" href={'/'}>Burn Signal</a>\n          </div>\n\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"sr-only\">Toggle navigation</span>\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse justify-content-end\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href={'/'}>\n                  <i className=\"tim-icons icon-bell-55\"></i>  Notifications\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n\n  }\n}\n\nexport default NavBar\n","import React, { Component } from 'react';\nimport Deposit from './Deposit';\n\nclass Deposits extends Component {\n\n  render() {\n\n    const deposits = this.props.deposits.map(deposit => {\n      return <Deposit key={deposit.id} deposit={deposit}/>\n    })\n\n    return (\n      <div>\n        <h4>{this.props.name} Deposits</h4>\n        {deposits}\n\n      </div>\n    )\n  }\n}\n\nexport default Deposits\n","import React, { Component } from 'react';\n\nclass Deposit extends Component {\n\n  /*\n  anonymousDeposits(first: 5) {\n    id\n    SenderAddr\n    ContriValue\n    PropName\n    Choice\n  }\n  */\n  render() {\n    return(\n      <div className=\"sidebar\">\n\n        <div className=\"sidebar-wrapper\">\n\n          <ul className=\"nav\">\n            <li className=\"active \">\n              <a href={'/'}>\n                <i className=\"tim-icons icon-chart-pie-36\"></i>\n                <p>Dashboard</p>\n              </a>\n            </li>\n            <li>\n              <a href={'/#/newVote'}>\n                <i className=\"tim-icons icon-bulb-63\"></i>\n                <p>New Proposal</p>\n              </a>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default Deposit\n","import React, { Component } from \"react\";\nimport Proposals from './components/Proposals';\nimport Deposits from './components/Deposits';\nimport NavBar from './components/NavBar';\nimport SideBar from './components/SideBar';\nimport \"./black-dashboard/assets/css/black-dashboard-react.css\";\nimport \"./black-dashboard/assets/css/nucleo-icons.css\";\n\n\nclass App extends Component {\n\n  state = { storageValue: 0, web3: null, accounts: null, contract: null, proposals: [], deposits: [] };\n\n  componentDidMount = async () => {\n    try {\n      console.log('Loading graph...');\n      await this.graph();\n    } catch (error) {\n      alert(\n        'Error loading The Graph',\n      );\n      console.error(error);\n    }\n  };\n\n  async graph(){\n\n    // https://thegraph.com/docs/graphql-api\n    // anonymousDeposits (where: {PropName: \"qwwafae\"}) {\n    const query = `{\n      anonymousDeposits {\n        id\n        SenderAddr\n        ContriValue\n        PropName\n        Choice\n      }\n      newProposalIssueds(where: { name_not_contains: \"fae\" }) {\n        id\n        issuer\n        deadline\n        name\n        data\n        optionBaddr\n        optionAaddr\n      }\n    }`;\n\n    const result = await fetch('https://api.thegraph.com/subgraphs/name/madhur4444/imgovdynamic', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify({\n        query\n      })\n    }).then(r => r.json()).then(data => data).catch(error => console.log(error))\n\n    // console.log('Result:');\n    // console.log(result);\n    var anonymousDeposits = result.data.anonymousDeposits;\n    var newProposalIssueds = result.data.newProposalIssueds;\n    this.setState({\n      proposals: newProposalIssueds,\n      deposits: anonymousDeposits\n    });\n\n    console.log('graph() OUT')\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <SideBar></SideBar>\n\n        <div className=\"main-panel\">\n          <NavBar></NavBar>\n\n          <div className=\"content\">\n            <div className=\"container-fluid\">\n\n              <Proposals proposals={this.state.proposals} />\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n\n    // This is to get round routing issue\n    if(document.readyState === \"complete\"){\n      loadWeb3(resolve, reject);\n      console.log('Web3 Loaded Ok');\n    }\n\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      loadWeb3(resolve, reject);\n      console.log('Web3 Loaded.');\n    });\n  });\n\nasync function loadWeb3(resolve, reject){\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n    try {\n      // Request account access if needed\n      await window.ethereum.enable();\n      // Acccounts now exposed\n      resolve(web3);\n    } catch (error) {\n      reject(error);\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    resolve(web3);\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\n      \"http://127.0.0.1:8545\"\n    );\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n}\n\nexport default getWeb3;\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport SideBar from './SideBar';\nimport getWeb3 from \"../utils/getWeb3\";\n\nclass NewVote extends Component {\n\n  state = { web3: null, accounts: null, contract: null };\n\n  constructor(props) {\n    super(props);\n\n    this.makeNewVote = this.makeNewVote.bind(this);\n    this.updateQuestion = this.updateQuestion.bind(this);\n    this.updateDeadline = this.updateDeadline.bind(this);\n  }\n\n  componentDidMount = async () => {\n    try {\n      console.log('Loading web3...');\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\n      let address = '0x6936b81d7629378aabddcf882b2a7fdfff1cd962';  // Taken from old repo, assume this is the Ropstein deployed\n      // let address = '0xa26575bab179486100e325fc32250cd20a78a28a';  // Taken from old repo, assume this is the Ropstein deployed\n\n      const instance = new web3.eth.Contract(abi, address);\n\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance });\n\n    } catch (error) {\n      alert(\n        'Error loading The Graph',\n      );\n      console.error(error);\n    }\n  };\n\n  async makeNewVote(){\n    console.log('New Vote');\n    console.log(this.state.question);\n    console.log(this.state.deadline);\n    console.log('Sending transaction...');\n    await this.state.contract.methods.newVoteProposal(this.state.question,'Here is some data', (Date.now() + 3600*1000)).send({ from: this.state.accounts[0] });\n    console.log('Done?')\n  }\n\n  updateQuestion(event) {\n    this.setState({question: event.target.value});\n  }\n\n  updateDeadline(event) {\n    this.setState({deadline: event.target.value});\n  }\n\n  render() {\n    return(\n\n      <div className=\"App\">\n\n        <SideBar></SideBar>\n\n        <div className=\"main-panel\">\n          <NavBar></NavBar>\n\n            <div className=\"content\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h5 className=\"title\">Ask a question...</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      <form>\n\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Your Question</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Ask Away\" onChange={this.updateQuestion}/>\n                            </div>\n                          </div>\n\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-12 pr-md-1\">\n                            <div className=\"form-group\">\n                              <label>Deadline</label>\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Block No\"  onChange={this.updateDeadline}/>\n                            </div>\n                          </div>\n                        </div>\n\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <button type=\"submit\" className=\"btn btn-fill btn-primary\" onClick={this.makeNewVote}>Post</button>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n        </div>\n      </div>\n\n    )\n\n  }\n}\n\nexport default NewVote;\n\nvar abi = [\n  {\n   \"constant\": false,\n   \"inputs\": [\n    {\n     \"name\": \"_name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_data\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"_deadline\",\n     \"type\": \"uint64\"\n    }\n   ],\n   \"name\": \"newVoteProposal\",\n   \"outputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"function\"\n  },\n  {\n   \"inputs\": [],\n   \"payable\": false,\n   \"stateMutability\": \"nonpayable\",\n   \"type\": \"constructor\"\n  },\n  {\n   \"anonymous\": false,\n   \"inputs\": [\n    {\n     \"indexed\": false,\n     \"name\": \"proposalID\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"indexed\": false,\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"name\": \"newProposalIssued\",\n   \"type\": \"event\"\n  },\n  {\n   \"constant\": true,\n   \"inputs\": [\n    {\n     \"name\": \"\",\n     \"type\": \"uint256\"\n    }\n   ],\n   \"name\": \"proposals\",\n   \"outputs\": [\n    {\n     \"name\": \"issuer\",\n     \"type\": \"address\"\n    },\n    {\n     \"name\": \"deadline\",\n     \"type\": \"uint256\"\n    },\n    {\n     \"name\": \"name\",\n     \"type\": \"string\"\n    },\n    {\n     \"name\": \"data\",\n     \"type\": \"string\"\n    }\n   ],\n   \"payable\": false,\n   \"stateMutability\": \"view\",\n   \"type\": \"function\"\n  }\n ]\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport NewVote from './components/NewVote';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter, Route } from 'react-router-dom'\n// <App />,\nconst About = () => (\n  <div>\n    <h2>About</h2>\n  </div>\n)\n\nconst Profile = ({match}) => (\n  <div>\n    <h2>Profile For Address: {match.params.address}</h2>\n  </div>\n)\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <HashRouter basename='/'>\n      <div>\n        <main>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/home\" component={App} />\n            <Route path=\"/about\" component={About} />\n          <Route path=\"/newVote\" component={NewVote} />\n          <Route exact path=\"/profile/:address\" component={Profile} />\n        </main>\n      </div>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}